levels(dengueData$tp_result_exame)[1] <- "reagente"
levels(dengueData$tp_result_exame)[2] <- "nao_reagente"
levels(dengueData$tp_result_exame)[3] <- "inconclusivo"
levels(dengueData$tp_result_exame)[4] <- "nao_realizado"
levels(dengueData$tp_result_exame)
---
title: "Casos de Dengue em Recife - PE (2013 a 2018)"
author: "Douglas Dias da Silva"
date: "14/07/2020"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
install.packages("tidyverse", repos = "http://cran.us.r-project.org")
library(tidyverse)
```
## Preparação dos Dados {.tabset}
### Carregando e Combinando os Dados
```{r include=FALSE}
defaultW <- getOption("warn")
options(warn = -1)
```
```{r dataPreparing message}
data2013 <- read.csv("casos-dengue2013.csv", header = TRUE, sep = ";")
data2014 <- read.csv("casos-dengue2014.csv", header = TRUE, sep = ";")
data2015 <- read.csv("casos-dengue2015.csv", header = TRUE, sep = ";")
data2016 <- read.csv("casos-dengue2016.csv", header = TRUE, sep = ";")
data2017 <- read.csv("casos-dengue2017.csv", header = TRUE, sep = ";")
data2018 <- read.csv("casos-dengue2018.csv", header = TRUE, sep = ";")
# Ajustando o nome da primeira coluna
names(data2015)[names(data2015) == "ï..nu_notificacao"] <- "nu_notificacao"
# Ajustando o tipo da coluna co_cbo_ocupacao
data2013$co_cbo_ocupacao <- as.numeric(data2013$co_cbo_ocupacao)
data2014$co_cbo_ocupacao <- as.numeric(data2014$co_cbo_ocupacao)
data2015$co_cbo_ocupacao <- as.numeric(data2015$co_cbo_ocupacao)
data2016$co_cbo_ocupacao <- as.numeric(data2016$co_cbo_ocupacao)
data2017$co_cbo_ocupacao <- as.numeric(data2017$co_cbo_ocupacao)
data2018$co_cbo_ocupacao <- as.numeric(data2018$co_cbo_ocupacao)
# Juntando os dados em um único dataframe
dengueData <- bind_rows(data2013, data2014)
dengueData <- bind_rows(dengueData, data2015)
dengueData <- bind_rows(dengueData, data2016)
dengueData <- bind_rows(dengueData, data2017)
dengueData <- bind_rows(dengueData, data2018)
```
### Limpeza dos Dados
```{r dataCleaning}
dengueData <- select(
dengueData,
nu_notificacao,
tp_notificacao,
co_cid,
dt_notificacao,
ds_semana_notificacao,
notificacao_ano,
co_uf_notificacao,
co_municipio_notificacao,
id_regional,
co_unidade_notificacao,
dt_diagnostico_sintoma,
ds_semana_sintoma,
dt_nascimento,
nu_idade,
tp_sexo,
tp_gestante,
tp_raca_cor,
tp_escolaridade,
co_uf_residencia,
co_municipio_residencia,
co_regional_residencia,
co_distrito_residencia,
co_bairro_residencia,
no_bairro_residencia,
nome_logradouro_residencia,
nu_cep_residencia,
tp_zona_residencia,
dt_digitacao,
dt_investigacao,
co_cbo_ocupacao,
dt_coleta_exame,
tp_result_exame,
tp_result_isolamento,
tp_classificacao_final,
tp_criterio_confirmacao,
tp_autoctone_residencia,
co_municipio_infeccao,
co_distrito_infeccao,
co_bairro_infeccao,
no_bairro_infeccao,
tp_evolucao_caso,
dt_obito,
dt_encerramento,
st_ocorreu_hospitalizacao,
dt_internacao,
co_municipio_hospital
)
---
title: "Casos de Dengue em Recife - PE (2013 a 2018)"
author: "Douglas Dias da Silva"
date: "14/07/2020"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
install.packages("tidyverse", repos = "http://cran.us.r-project.org")
library(tidyverse)
```
## Preparação dos Dados {.tabset}
### Carregando e Combinando os Dados
```{r include=FALSE}
defaultW <- getOption("warn")
options(warn = -1)
```
```{r dataPreparing message}
data2013 <- read.csv("casos-dengue2013.csv", header = TRUE, sep = ";")
data2014 <- read.csv("casos-dengue2014.csv", header = TRUE, sep = ";")
data2015 <- read.csv("casos-dengue2015.csv", header = TRUE, sep = ";")
data2016 <- read.csv("casos-dengue2016.csv", header = TRUE, sep = ";")
data2017 <- read.csv("casos-dengue2017.csv", header = TRUE, sep = ";")
data2018 <- read.csv("casos-dengue2018.csv", header = TRUE, sep = ";")
# Ajustando o nome da primeira coluna
names(data2015)[names(data2015) == "ï..nu_notificacao"] <- "nu_notificacao"
# Ajustando o tipo da coluna co_cbo_ocupacao
data2013$co_cbo_ocupacao <- as.numeric(data2013$co_cbo_ocupacao)
data2014$co_cbo_ocupacao <- as.numeric(data2014$co_cbo_ocupacao)
data2015$co_cbo_ocupacao <- as.numeric(data2015$co_cbo_ocupacao)
data2016$co_cbo_ocupacao <- as.numeric(data2016$co_cbo_ocupacao)
data2017$co_cbo_ocupacao <- as.numeric(data2017$co_cbo_ocupacao)
data2018$co_cbo_ocupacao <- as.numeric(data2018$co_cbo_ocupacao)
# Juntando os dados em um único dataframe
dengueData <- bind_rows(data2013, data2014)
dengueData <- bind_rows(dengueData, data2015)
dengueData <- bind_rows(dengueData, data2016)
dengueData <- bind_rows(dengueData, data2017)
dengueData <- bind_rows(dengueData, data2018)
```
### Limpeza dos Dados
```{r dataCleaning}
dengueData <- select(
dengueData,
nu_notificacao,
tp_notificacao,
co_cid,
dt_notificacao,
ds_semana_notificacao,
notificacao_ano,
co_uf_notificacao,
co_municipio_notificacao,
id_regional,
co_unidade_notificacao,
dt_diagnostico_sintoma,
ds_semana_sintoma,
dt_nascimento,
nu_idade,
tp_sexo,
tp_gestante,
tp_raca_cor,
tp_escolaridade,
co_uf_residencia,
co_municipio_residencia,
co_regional_residencia,
co_distrito_residencia,
co_bairro_residencia,
no_bairro_residencia,
nome_logradouro_residencia,
nu_cep_residencia,
tp_zona_residencia,
dt_digitacao,
dt_investigacao,
co_cbo_ocupacao,
dt_coleta_exame,
tp_result_exame,
tp_result_isolamento,
tp_classificacao_final,
tp_criterio_confirmacao,
tp_autoctone_residencia,
co_municipio_infeccao,
co_distrito_infeccao,
co_bairro_infeccao,
no_bairro_infeccao,
tp_evolucao_caso,
dt_obito,
dt_encerramento,
st_ocorreu_hospitalizacao,
dt_internacao,
co_municipio_hospital
)
# Criando fator a partir de tp_notificacao (Tipo da Notificação)
unique(dengueData$tp_notificacao)
dengueData$tp_notificacao <- as.factor(dengueData$tp_notificacao)
levels(dengueData$tp_notificacao)[1] <- "individual"
# Criando fator a partir de tp_sexo (Sexo)
unique(dengueData$tp_sexo)
dengueData$tp_sexo <- as.factor(dengueData$tp_sexo)
levels(dengueData$tp_sexo) [1] <- NA
# Criando fator a partir de tp_gestante (Tipo de Gestante)
unique(dengueData$tp_gestante)
dengueData$tp_gestante <- as.factor(dengueData$tp_gestante)
levels(dengueData$tp_gestante)
# Criando fator a partir de tp_gestante (Tipo de Gestante)
unique(dengueData$tp_gestante)
dengueData$tp_gestante <- as.factor(dengueData$tp_gestante)
levels(dengueData$tp_gestante) [1] <- "primeiro_trimestre"
levels(dengueData$tp_gestante) [2] <- "segundo_trimestre"
levels(dengueData$tp_gestante) [3] <- "terceiro_trimestre"
levels(dengueData$tp_gestante) [4] <- "idade_gestacional_ignorada"
levels(dengueData$tp_gestante) [5] <- "nao"
levels(dengueData$tp_gestante) [6] <- "nao_se_aplica"
levels(dengueData$tp_gestante) [7] <- "ignorado"
# Criando fator a partir de tp_raca_cor (Raça/Cor)
unique(dengueData$tp_raca_cor)
dengueData$tp_raca_cor <- as.factor(dengueData$tp_raca_cor)
levels(dengueData$tp_raca_cor)[1] <- "branca"
levels(dengueData$tp_raca_cor) [2] <- "preta"
levels(dengueData$tp_raca_cor) [3] <- "amarela"
levels(dengueData$tp_raca_cor) [4] <- "parda"
levels(dengueData$tp_raca_cor) [5] <- "indigena"
levels(dengueData$tp_raca_cor) [6] <- "ignorado"
# Criando fator a partir de tp_escolaridade (Escolaridade)
unique(dengueData$tp_escolaridade)
dengueData$tp_escolaridade <- as.factor(dengueData$tp_escolaridade)
levels(dengueData$tp_escolaridade)[1] <- "analfabeto"
levels(dengueData$tp_escolaridade)[2] <- "1_4_serie_incompleta"
levels(dengueData$tp_escolaridade)[3] <- "4_serie_completa"
levels(dengueData$tp_escolaridade)[4] <- "5_8_serie_incompleta"
levels(dengueData$tp_escolaridade)[5] <- "ensino_fundamental_completo"
levels(dengueData$tp_escolaridade)[6] <- "ensino_medio_incompleto"
levels(dengueData$tp_escolaridade)[7] <- "ensino_medio_completo"
levels(dengueData$tp_escolaridade)[8] <- "ensino_superior_incompleto"
levels(dengueData$tp_escolaridade)[9] <- "ensino_superior_completo"
levels(dengueData$tp_escolaridade)[10] <- "ignorado"
levels(dengueData$tp_escolaridade)[11] <- "nao_se_aplica"
# Criando fator a partir de tp_zona_residencia (Zona de Residência)
unique(dengueData$tp_zona_residencia)
dengueData$tp_zona_residencia <- as.factor(dengueData$tp_zona_residencia)
levels(dengueData$tp_zona_residencia)[1] <- "urbana"
levels(dengueData$tp_zona_residencia)[2] <- "rural"
levels(dengueData$tp_zona_residencia)[3] <- "periurbana"
levels(dengueData$tp_zona_residencia)[4] <- "ignorado"
# Criando fator a partir de tp_result_exame (Resultado do Exame Sorológico (IgM))
unique(dengueData$tp_result_exame)
dengueData$tp_result_exame <- as.factor(dengueData$tp_result_exame)
levels(dengueData$tp_result_exame)[1] <- "reagente"
levels(dengueData$tp_result_exame)[2] <- "nao_reagente"
levels(dengueData$tp_result_exame)[3] <- "inconclusivo"
levels(dengueData$tp_result_exame)[4] <- "nao_realizado"
# Criando fator a partir de tp_result_isolamento (Resultado Exame de Isolamento Viral)
unique(dengueData$tp_result_isolamento)
dengueData$tp_result_isolamento <- as.factor(dengueData$tp_result_isolamento)
```
##
knitr::opts_chunk$set(echo = TRUE)
install.packages("tidyverse", repos = "http://cran.us.r-project.org")
library(tidyverse)
# Criando fator a partir de tp_result_isolamento (Resultado Exame de Isolamento Viral)
unique(dengueData$tp_result_isolamento)
install.packages("tidyverse", repos = "http://cran.us.r-project.org")
knitr::opts_chunk$set(echo = TRUE)
install.packages("tidyverse", repos = "http://cran.us.r-project.org")
library(tidyverse)
# Criando fator a partir de tp_result_isolamento (Resultado Exame de Isolamento Viral)
unique(dengueData$tp_result_isolamento)
levels(dengueData$tp_result_isolamento)[1] <- "reagente"
levels(dengueData$tp_result_isolamento)[2] <- "nao_reagente"
levels(dengueData$tp_result_isolamento)[3] <- "inconclusivo"
levels(dengueData$tp_result_isolamento)[4] <- "nao_realizado"
levels(dengueData$tp_result_isolamento)
levels(dengueData$st_ocorreu_hospitalizacao)
# Criando fator a partir de tp_result_isolamento (Resultado Exame de Isolamento Viral)
unique(dengueData$st_ocorreu_hospitalizacao)
dengueData$st_ocorreu_hospitalizacao <- as.factor(dengueData$st_ocorreu_hospitalizacao)
levels(dengueData$st_ocorreu_hospitalizacao) [1] <- "sim"
levels(dengueData$st_ocorreu_hospitalizacao) [2] <- "nao"
levels(dengueData$st_ocorreu_hospitalizacao) [3] <- "ignorado"
levels(dengueData$st_ocorreu_hospitalizacao)
# Criando fator a partir de tp_classificacao_final (Informar a classificação do caso)
unique(dengueData$tp_classificacao_final)
dengueData$tp_classificacao_final <- as.factor(dengueData$tp_classificacao_final)
# Criando fator a partir de tp_classificacao_final (Informar a classificação do caso)
unique(dengueData$tp_classificacao_final)
# Criando fator a partir de tp_criterio_confirmacao (Informa o critério de confirmação/descarte)
unique(dengueData$tp_criterio_confirmacao)
# Criando fator a partir de tp_criterio_confirmacao (Informa o critério de confirmação/descarte)
unique(dengueData$tp_criterio_confirmacao)
dengueData$tp_criterio_confirmacao <- as.factor(dengueData$tp_criterio_confirmacao)
levels(dengueData$tp_criterio_confirmacao) [1] <- "laboratorio"
levels(dengueData$tp_criterio_confirmacao) [2] <- "clinico_epidemiologico"
levels(dengueData$tp_criterio_confirmacao) [3] <- "em_investigacao"
levels(dengueData$tp_criterio_confirmacao)
# Criando fator a partir de tp_evolucao_caso (Informar a evolução do caso)
unique(dengueData$tp_evolucao_caso)
dengueData$tp_evolucao_caso <- as.factor(dengueData$tp_evolucao_caso)
levels(dengueData$tp_evolucao_caso) [1] <- "cura"
levels(dengueData$tp_evolucao_caso) [2] <- "obito_dengue"
levels(dengueData$tp_evolucao_caso) [3] <- "obito_outras_causas"
levels(dengueData$tp_evolucao_caso) [4] <- "obitos_em_investigacao"
levels(dengueData$tp_evolucao_caso) [5] <- "ignorado"
levels(dengueData$tp_evolucao_caso)
pie(dengueData$tp_evolucao_caso)
levels(dengueData$tp_evolucao_caso)
table(dengueData$tp_evolucao_caso)
x <- as.data.frame(table(dengueData$tp_evolucao_caso))
pie(x$Freq, labels=x$Var1)
pie(x$Freq[2:4], labels=x$Var1[2:4])
x <- as.data.frame(table(dengueData$tp_criterio_confirmacao))
pie(x$Freq[2:4], labels=x$Var1[2:4])
pie(x$Freq, labels=x$Var1)
x <- as.data.frame(table(dengueData$tp_classificacao_final))
pie(x$Freq, labels=x$Var1)
# Criando fator a partir de tp_classificacao_final (Informar a classificação do caso)
unique(dengueData$tp_classificacao_final)
dengueData$tp_classificacao_final <- as.factor(dengueData$tp_classificacao_final)
levels(dengueData$tp_classificacao_final) [1] <- "dengue_classico"
levels(dengueData$tp_classificacao_final) [2] <- "dengue_com_complicacoes"
levels(dengueData$tp_classificacao_final) [3] <- "febre_hemorragica_dengue"
levels(dengueData$tp_classificacao_final) [4] <- "sindrome_choque_dengue"
levels(dengueData$tp_classificacao_final) [5] <- "descartado"
levels(dengueData$tp_classificacao_final) [6] <- "inconclusivo"
levels(dengueData$tp_classificacao_final) [7] <- "dengue"
levels(dengueData$tp_classificacao_final) [8] <- "dengue_com_sinais_de_alarme"
levels(dengueData$tp_classificacao_final) [9] <- "dengue_grave"
x <- as.data.frame(table(dengueData$tp_classificacao_final))
pie(x$Freq, labels=x$Var1)
pie(log(x$Freq), labels=x$Var1)
pie(x$Freq, labels=x$Var1)
plot(x$Freq, labels=x$Var1)
barplot(x$Freq, labels=x$Var1)
x <- as.data.frame(table(dengueData$tp_classificacao_final))
barplot(x$Freq)
x <- as.data.frame(table(dengueData$tp_evolucao_caso))
barplot(x$Freq)
barplot(log(x$Freq))
x <- as.data.frame(table(dengueData$st_ocorreu_hospitalizacao))
barplot(log(x$Freq))
barplot(x$Freq)
x <- as.data.frame(table(dengueData$tp_escolaridade))
barplot(x$Freq)
barplot(log(x$Freq))
x <- as.data.frame(table(dengueData$no_bairro_residencia))
barplot(log(x$Freq))
barplot(x$Freq)
x <- as.data.frame(table(dengueData$no_bairro_residencia))
pie(x$Freq, labels = x$Var1)
pie(x$Freq[1:10], labels = x$Var1[1:10])
x <- as.data.frame(table(dengueData$no_bairro_residencia))
x <- arrange(x, Freq)
pie(x$Freq[1:10], labels = x$Var1[1:10])
x[1:10]
head(x)
x <- arrange(x, desc(Freq))
pie(x$Freq[1:10], labels = x$Var1[1:10])
knitr::opts_chunk$set(echo = TRUE)
install.packages("tidyverse", repos = "http://cran.us.r-project.org")
library(tidyverse)
pie(x$Freq[1:10], labels = x$Var1[1:10], col = rainbow(10))
str(dengueData)
dengueData$dt_obito
dengueData$dt_obito[dengueData$dt_obito != ""]
head(dengueData)
tail(dengueData)
head(dengueData)
tail(dengueData)
x <- as.data.frame(table(dengueData$co_uf_notificacao))
x <- arrange(x, desc(Freq))
pie(x$Freq[1:10], labels = x$Var1[1:10], col = rainbow(10))
x <- as.data.frame(table(dengueData$co_municipio_notificacao))
x <- arrange(x, desc(Freq))
pie(x$Freq[1:10], labels = x$Var1[1:10], col = rainbow(10))
x <- as.data.frame(table(dengueData$co_municipio_residencia))
x <- arrange(x, desc(Freq))
pie(x$Freq[1:10], labels = x$Var1[1:10], col = rainbow(10))
pie(x$Freq, labels = x$Var1, col = rainbow)
pie(x$Freq, labels = x$Var1)
View(dengueData$dt_diagnostico_sintoma)
View(dengueData$dt_diagnostico_sintoma)
str(dengueData)
```{r setup, include=FALSE}
data2013 <- read.csv("casos-dengue2013.csv", header = TRUE, sep = ";")
data2014 <- read.csv("casos-dengue2014.csv", header = TRUE, sep = ";")
data2015 <- read.csv("casos-dengue2015.csv", header = TRUE, sep = ";")
data2016 <- read.csv("casos-dengue2016.csv", header = TRUE, sep = ";")
data2017 <- read.csv("casos-dengue2017.csv", header = TRUE, sep = ";")
data2018 <- read.csv("casos-dengue2018.csv", header = TRUE, sep = ";")
names(data2015)[names(data2015) == "ï..nu_notificacao"] <- "nu_notificacao"
data2013$co_cbo_ocupacao <- as.numeric(data2013$co_cbo_ocupacao)
data2014$co_cbo_ocupacao <- as.numeric(data2014$co_cbo_ocupacao)
data2015$co_cbo_ocupacao <- as.numeric(data2015$co_cbo_ocupacao)
data2016$co_cbo_ocupacao <- as.numeric(data2016$co_cbo_ocupacao)
data2017$co_cbo_ocupacao <- as.numeric(data2017$co_cbo_ocupacao)
data2018$co_cbo_ocupacao <- as.numeric(data2018$co_cbo_ocupacao)
data2013 <- read.csv("casos-dengue2013.csv", header = TRUE, sep = ";")
data2014 <- read.csv("casos-dengue2014.csv", header = TRUE, sep = ";")
data2015 <- read.csv("casos-dengue2015.csv", header = TRUE, sep = ";")
data2016 <- read.csv("casos-dengue2016.csv", header = TRUE, sep = ";")
data2017 <- read.csv("casos-dengue2017.csv", header = TRUE, sep = ";")
data2018 <- read.csv("casos-dengue2018.csv", header = TRUE, sep = ";")
data2013$co_cbo_ocupacao <- as.numeric(data2013$co_cbo_ocupacao)
data2014$co_cbo_ocupacao <- as.numeric(data2014$co_cbo_ocupacao)
data2015$co_cbo_ocupacao <- as.numeric(data2015$co_cbo_ocupacao)
data2016$co_cbo_ocupacao <- as.numeric(data2016$co_cbo_ocupacao)
data2017$co_cbo_ocupacao <- as.numeric(data2017$co_cbo_ocupacao)
data2018$co_cbo_ocupacao <- as.numeric(data2018$co_cbo_ocupacao)
dengueData <- bind_rows(data2013, data2014)
dengueData <- bind_rows(dengueData, data2015)
dengueData <- bind_rows(dengueData, data2016)
dengueData <- bind_rows(dengueData, data2017)
dengueData <- bind_rows(dengueData, data2018)
dengueData <- select(
dengueData,
nu_notificacao,
tp_notificacao,
co_cid,
dt_notificacao,
ds_semana_notificacao,
notificacao_ano,
co_uf_notificacao,
co_municipio_notificacao,
id_regional,
co_unidade_notificacao,
dt_diagnostico_sintoma,
ds_semana_sintoma,
dt_nascimento,
nu_idade,
tp_sexo,
tp_gestante,
tp_raca_cor,
tp_escolaridade,
co_uf_residencia,
co_municipio_residencia,
co_regional_residencia,
co_distrito_residencia,
co_bairro_residencia,
no_bairro_residencia,
nome_logradouro_residencia,
nu_cep_residencia,
tp_zona_residencia,
dt_digitacao,
dt_investigacao,
co_cbo_ocupacao,
dt_coleta_exame,
tp_result_exame,
tp_result_isolamento,
tp_classificacao_final,
tp_criterio_confirmacao,
tp_autoctone_residencia,
co_municipio_infeccao,
co_distrito_infeccao,
co_bairro_infeccao,
no_bairro_infeccao,
tp_evolucao_caso,
dt_obito,
dt_encerramento,
st_ocorreu_hospitalizacao,
dt_internacao,
co_municipio_hospital
)
dengueData$tp_notificacao <- as.factor(dengueData$tp_notificacao)
levels(dengueData$tp_notificacao)[1] <- "individual"
dengueData$tp_sexo <- as.factor(dengueData$tp_sexo)
levels(dengueData$tp_sexo)
levels(dengueData$tp_sexo) [1] <- NA
levels(dengueData$tp_sexo)
data2013$dt_notificacao
data2013 <- data2013 %>%
separate(col = "dt_notificacao", into = c("ano_notificacao", "mes_notificacao", "dia_notificacao"), sep = "/")
data2013$dia_notificacao
data2013 <- data2013 %>%
separate(col = "dia_notificacao", into = c("dia_notificacao", "hora_notificacao"), sep = "2")
data2013 <- read.csv("casos-dengue2013.csv", header = TRUE, sep = ";")
data2014 <- read.csv("casos-dengue2014.csv", header = TRUE, sep = ";")
data2015 <- read.csv("casos-dengue2015.csv", header = TRUE, sep = ";")
data2016 <- read.csv("casos-dengue2016.csv", header = TRUE, sep = ";")
data2017 <- read.csv("casos-dengue2017.csv", header = TRUE, sep = ";")
data2018 <- read.csv("casos-dengue2018.csv", header = TRUE, sep = ";")
data2013$co_cbo_ocupacao <- as.numeric(data2013$co_cbo_ocupacao)
data2014$co_cbo_ocupacao <- as.numeric(data2014$co_cbo_ocupacao)
data2015$co_cbo_ocupacao <- as.numeric(data2015$co_cbo_ocupacao)
data2016$co_cbo_ocupacao <- as.numeric(data2016$co_cbo_ocupacao)
data2017$co_cbo_ocupacao <- as.numeric(data2017$co_cbo_ocupacao)
data2018$co_cbo_ocupacao <- as.numeric(data2018$co_cbo_ocupacao)
data2013 <- data2013 %>%
separate(col = "dt_notificacao", into = c("ano_notificacao", "mes_notificacao", "dia_notificacao"), sep = "/")
data2013 <- data2013 %>%
separate(col = "dia_notificacao", into = c("dia_notificacao", "hora_notificacao"), sep = " ")
data2013$ano_notificacao <- as.numeric(data2013$ano_notificacao)
data2013$mes_notificacao <- as.numeric(data2013$mes_notificacao)
data2013$dia_notificacao <- as.numeric(data2013$dia_notificacao)
data2014$dt_notificacao
data2015$dt_notificacao
data2014$dt_notificacao
data2015$dt_notificacao
data2014 <- data2014 %>%
separate(col = "dt_notificacao", into = c("ano_notificacao", "mes_notificacao", "dia_notificacao"), sep = "/")
data2014 <- data2014 %>%
separate(col = "dia_notificacao", into = c("dia_notificacao", "hora_notificacao"), sep = " ")
data2014$ano_notificacao <- as.numeric(data2014$ano_notificacao)
data2014$mes_notificacao <- as.numeric(data2014$mes_notificacao)
data2014$dia_notificacao <- as.numeric(data2014$dia_notificacao)
data2015 <- data2015 %>%
separate(col = "dt_notificacao", into = c("ano_notificacao", "mes_notificacao", "dia_notificacao"), sep = "-")
data2015 <- data2015 %>%
separate(col = "dia_notificacao", into = c("dia_notificacao", "hora_notificacao"), sep = " ")
data2015$ano_notificacao <- as.numeric(data2015$ano_notificacao)
data2015$mes_notificacao <- as.numeric(data2015$mes_notificacao)
data2015$dia_notificacao <- as.numeric(data2015$dia_notificacao)
data2015$ano_notificacao
data2015$dia_notificacao
cls
data2016$dt_diagnostico_sintoma[1]
data2017$dt_diagnostico_sintoma[1]
data2017$dt_diagnostico_sintoma[1000]
data2018$dt_diagnostico_sintoma[1000]
